version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: greenpulse-postgres
    environment:
      POSTGRES_DB: greenpulse
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    networks:
      - greenpulse-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.3
    container_name: keycloak
    environment:
      KC_DB: dev-mem
      KC_HTTP_PORT: 8080
      KC_PROXY: edge
      KC_HOSTNAME_STRICT: "false"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: "true"
      KEYCLOAK_IMPORT: /opt/keycloak/data/import/greenpulse-realm.json
    command:
      - start-dev
      - --import-realm
    volumes:
      - ./greenpulse-realm.json:/opt/keycloak/data/import/greenpulse-realm.json
    ports:
      - "8180:8080"
    networks:
      - greenpulse-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080 || exit 0"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 30s

  kafka-1:
    image: bitnami/kafka:latest
    hostname: kafka-1
    ports:
      - "19092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=WnLkTHhkQaiJbwP8FClPhw
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,INTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092,INTERNAL://kafka-1:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "kafka-1:9092"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - greenpulse-network

  kafka-2:
    image: bitnami/kafka:latest
    hostname: kafka-2
    ports:
      - "19095:9095"
    environment:
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_KRAFT_CLUSTER_ID=WnLkTHhkQaiJbwP8FClPhw
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9095,CONTROLLER://:9093,INTERNAL://:9096
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:9095,INTERNAL://kafka-2:9096
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "kafka-2:9095"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - greenpulse-network

  kafka-3:
    image: bitnami/kafka:latest
    hostname: kafka-3
    ports:
      - "19098:9098"
    environment:
      - KAFKA_CFG_NODE_ID=3
      - KAFKA_KRAFT_CLUSTER_ID=WnLkTHhkQaiJbwP8FClPhw
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9098,CONTROLLER://:9093,INTERNAL://:9099
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-3:9098,INTERNAL://kafka-3:9099
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "kafka-3:9098"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - greenpulse-network
  
  redis:
    image: redis:7.2
    container_name: greenpulse-redis
    ports:
      - "6379:6379"
    networks:
      - greenpulse-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  data-ingestion-service:
    build:
      context: ./Data_Ingestion_Service
    container_name: data-ingestion-service
    env_file:
      - ./Data_Ingestion_Service/.env
    ports:
      - "8090:8090"
    depends_on:
      redis:
        condition: service_healthy
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
    networks:
      - greenpulse-network

  auth-service:
    build:
      context: ./Auth-Service
    container_name: auth-service
    env_file:
      - ./Auth-Service/.env
    ports:
      - "8087:8087"
    depends_on:
      keycloak:
        condition: service_healthy
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
    networks:
      - greenpulse-network
  
  user-management-service:
    build:
      context: ./User-Management-Service
    container_name: user-management-service
    env_file:
      - ./User-Management-Service/.env
    ports:
      - "8085:8085"
    depends_on:
      auth-service:
        condition: service_started
      postgres:
        condition: service_healthy
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
    networks:
      - greenpulse-network
  
  notification-service:
    build:
      context: ./Notification-Service
    container_name: notification-service
    # env_file:
    #   - ./Notification-Service/.env
    ports:
      - "8083:8083"
    depends_on:
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
    networks:
      - greenpulse-network

  reporting-service:
    build:
      context: ./Reporting-Service
    container_name: reporting-service
    ports:
      - "8088:8088"
    depends_on:
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - greenpulse-network

  ai-analytics-service:
    build:
      context: ./AI-Analytics-Service
    container_name: ai-analytics-service
    # env_file:
    #   - ./AI-Analytics-Service/.env
    ports:
      - "8086:8086"
    depends_on:
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
    networks:
      - greenpulse-network

networks:
  greenpulse-network:
    driver: bridge